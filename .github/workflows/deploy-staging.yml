name: üöÄ Deploy to Staging Server

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy-staging:
    name: üì¶ Deploy TAMAM Admin to Staging
    runs-on: ubuntu-latest
    
    environment:
      name: staging
      url: https://staging.tamam.shop/admin
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
      
      - name: üîê Setup SSH Key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.STAGING_SSH_KEY }}
      
      - name: üîë Add Server to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.STAGING_SERVER_IP }} >> ~/.ssh/known_hosts
      
      - name: üß™ Test SSH Connection
        run: |
          ssh -o ConnectTimeout=10 root@${{ secrets.STAGING_SERVER_IP }} "echo '‚úÖ SSH connection successful'"
      
      - name: üì¶ Deploy Laravel Files
        run: |
          echo "üöÄ Starting deployment to staging.tamam.shop..."
          
          # Deploy core Laravel files with rsync
          rsync -avz --progress \
            --include='app/' --include='app/**' \
            --include='bootstrap/' --include='bootstrap/**' \
            --include='config/' --include='config/**' \
            --include='database/' --include='database/**' \
            --include='public/' --include='public/**' \
            --include='resources/' --include='resources/**' \
            --include='routes/' --include='routes/**' \
            --include='storage/' --include='storage/**' \
            --include='Modules/' --include='Modules/**' \
            --include='vendor/' --include='vendor/**' \
            --include='artisan' \
            --include='composer.json' \
            --include='composer.lock' \
            --exclude='*' \
            ./ root@${{ secrets.STAGING_SERVER_IP }}:/var/www/tamam/
          
          echo "‚úÖ Files deployed successfully"
      
      - name: üîß Set File Permissions
        run: |
          ssh root@${{ secrets.STAGING_SERVER_IP }} "
            chown -R www-data:www-data /var/www/tamam &&
            chmod -R 755 /var/www/tamam &&
            chmod -R 775 /var/www/tamam/storage &&
            mkdir -p /var/www/tamam/bootstrap/cache &&
            chmod -R 775 /var/www/tamam/bootstrap/cache
          "
      
      - name: üìö Update Dependencies
        run: |
          ssh root@${{ secrets.STAGING_SERVER_IP }} "
            cd /var/www/tamam &&
            composer install --no-dev --optimize-autoloader --no-interaction
          "
      
      - name: üßπ Clear Laravel Caches
        run: |
          ssh root@${{ secrets.STAGING_SERVER_IP }} "
            cd /var/www/tamam &&
            php artisan config:clear &&
            php artisan route:clear &&
            php artisan cache:clear &&
            php artisan view:clear
          "
      
      - name: üîë Generate App Key (if needed)
        run: |
          ssh root@${{ secrets.STAGING_SERVER_IP }} "
            cd /var/www/tamam &&
            if ! grep -q '^APP_KEY=base64:' .env; then 
              php artisan key:generate --force
            fi
          "
      
      - name: üîÑ Restart Services
        run: |
          ssh root@${{ secrets.STAGING_SERVER_IP }} "
            systemctl restart php8.3-fpm &&
            systemctl restart nginx
          "
      
      - name: üß™ Test Deployment
        run: |
          echo "Testing deployment..."
          
          # Test admin dashboard
          DASHBOARD_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://staging.tamam.shop/admin)
          echo "Admin Dashboard: $DASHBOARD_STATUS"
          
          # Test admin login
          LOGIN_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://staging.tamam.shop/login/admin)
          echo "Admin Login: $LOGIN_STATUS"
          
          # Test addon management
          ADDON_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://staging.tamam.shop/admin/addon)
          echo "Addon Management: $ADDON_STATUS"
          
          # Verify all critical routes are working
          if [[ "$DASHBOARD_STATUS" =~ ^(200|302)$ ]] && [[ "$LOGIN_STATUS" =~ ^(200|302)$ ]] && [[ "$ADDON_STATUS" =~ ^(200|302)$ ]]; then
            echo "‚úÖ All critical routes are responding correctly"
          else
            echo "‚ùå Some routes are not responding correctly"
            exit 1
          fi
      
      - name: üìä Deployment Summary
        if: always()
        run: |
          echo "üéâ STAGING DEPLOYMENT COMPLETE!"
          echo "üìç Admin URL: https://staging.tamam.shop/admin"
          echo "üìç Login URL: https://staging.tamam.shop/login/admin"
          echo "‚è∞ Deployed at: $(date)"
          echo ""
          echo "üîç Next Steps:"
          echo "  ‚Ä¢ Verify admin login functionality"
          echo "  ‚Ä¢ Test routing fixes are working"
          echo "  ‚Ä¢ Monitor application logs"